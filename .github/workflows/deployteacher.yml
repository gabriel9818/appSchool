name: CI/CD for Teacher Management

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/teacher_management/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Checkout del código
      uses: actions/checkout@v3

    - name: 🔑 Acceder al servidor EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_TEACHER }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_TEACHER}}
        port: 22
        script: |
          echo "✅ Conexión establecida con EC2"

          echo "🛠️ Verificando si Docker y Docker Compose están instalados..."
          if ! command -v docker &> /dev/null; then
            echo "🔧 Instalando Docker..."
            sudo apt update -y
            sudo apt install -y docker.io docker-compose
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu
          fi

          echo "🛑 Eliminando contenedores en conflicto..."
          docker stop $(docker ps -aq) || true
          docker rm $(docker ps -aq) || true
          docker rmi -f gabrielrv/created_teachers:latest || true
          docker rmi -f gabrielrv/delete_teachers:latest || true
          docker rmi -f gabrielrv/read_teachers:latest || true
          docker rmi -f gabrielrv/update_teachers:latest || true
          docker network prune -f || true
          docker volume prune -f || true

          echo "📦 Moviéndonos al directorio del proyecto..."
          cd ~/appSchool/BACKEND/teacher_management || mkdir -p ~/appSchool/BACKEND/teacher_management && cd ~/appSchool/BACKEND/teacher_management

          echo "⬇️ Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'

          services:
            created_teachers:
              image: gabrielrv/created_teachers:latest
              container_name: created_teachers
              restart: always
              ports:
                - "8010:8010"
              env_file:
                - .env

            delete_teachers:
              image: gabrielrv/delete_teachers:latest
              container_name: delete_teachers
              restart: always
              ports:
                - "8013:8013"
              env_file:
                - .env

            read_teachers:
              image: gabrielrv/read_teachers:latest
              container_name: read_teachers
              restart: always
              ports:
                - "8011:8011"
              env_file:
                - .env

            update_teachers:
              image: gabrielrv/update_teachers:latest
              container_name: update_teachers
              restart: always
              ports:
                - "8012:8012"
              env_file:
                - .env
          EOF

          echo "📥 Descargando imágenes de Docker..."
          docker pull gabrielrv/created_teachers:latest
          docker pull gabrielrv/delete_teachers:latest
          docker pull gabrielrv/read_teachers:latest
          docker pull gabrielrv/update_teachers:latest

          echo "🚀 Desplegando servicios con Docker Compose..."
          docker-compose up -d --force-recreate --remove-orphans

          echo "🔍 Verificando contenedores en ejecución..."
          docker ps