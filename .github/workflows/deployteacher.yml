name: Docker Image CI/CD for Teacher Management Services

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/teacher_management/**'
  pull_request:
    paths:
      - 'BACKEND/teacher_management/**'
    branches: ["test", "main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker images
      run: |
        services=("created_teachers" "delete_teachers" "read_teachers" "update_teachers")
        for service in "${services[@]}"; do
          docker build $GITHUB_WORKSPACE/BACKEND/teacher_management/$service/. \
            --file $GITHUB_WORKSPACE/BACKEND/teacher_management/$service/Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/$service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
        done

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_TEACHER_MANAGEMENT }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_TEACHER }}
        port: 22
        script: |
          echo "🔄 Exportando variables de entorno..."
          echo "export DB_HOST=${{ secrets.DB_HOST_TEACHER }}" >> ~/.bashrc
          echo "export DB_USER=${{ secrets.DB_USER_TEACHER }}" >> ~/.bashrc
          echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD_TEACHER }}" >> ~/.bashrc
          echo "export DB_NAME=${{ secrets.DB_NAME_TEACHER }}" >> ~/.bashrc
          echo "export DB_PORT_TEACHER=${{ secrets.DB_PORT_TEACHER }}" >> ~/.bashrc
          source ~/.bashrc

          echo "📦 Verificando carpeta del proyecto..."
          if [ ! -d "/home/ubuntu/appSchool/BACKEND/teacher_management" ]; then
            echo "⚠️ La carpeta no existe. Creándola..."
            mkdir -p /home/ubuntu/appSchool/BACKEND/teacher_management
          fi
          cd /home/ubuntu/appSchool/BACKEND/teacher_management

          echo "🛠️ Instalando Docker y Docker Compose si es necesario..."
          if ! command -v docker &> /dev/null; then
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu
          fi

          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "🛑 Deteniendo y eliminando contenedores existentes..."
          sudo docker-compose down || true
          sudo docker rm -f $(sudo docker ps -aq) || true
          sudo docker rmi -f $(sudo docker images -q) || true

          echo "⬇️ Descargando imágenes actualizadas..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/created_teachers:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete_teachers:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/read_teachers:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/update_teachers:latest

          echo "🚀 Desplegando contenedores con Docker Compose..."
          sudo docker-compose up -d

          echo "🔍 Verificando contenedores en ejecución..."
          sudo docker ps
