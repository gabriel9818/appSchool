name: Docker CI/CD with Docker Compose for Teacher Management Services

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/teacher_management/**'
  pull_request:
    paths:
      - 'BACKEND/teacher_management/**'
    branches: ["test", "main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Debug repository structure
      run: |
        echo "üìÇ Listing files..."
        ls -R $GITHUB_WORKSPACE

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Images
      run: |
        docker build $GITHUB_WORKSPACE/BACKEND/teacher_management/created_teachers/. \
          -t ${{ secrets.DOCKER_USERNAME }}/created_teachers:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/created_teachers:latest
        
        docker build $GITHUB_WORKSPACE/BACKEND/teacher_management/delete_teachers/. \
          -t ${{ secrets.DOCKER_USERNAME }}/delete_teachers:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/delete_teachers:latest

        docker build $GITHUB_WORKSPACE/BACKEND/teacher_management/read_teachers/. \
          -t ${{ secrets.DOCKER_USERNAME }}/read_teachers:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/read_teachers:latest

        docker build $GITHUB_WORKSPACE/BACKEND/teacher_management/update_teachers/. \
          -t ${{ secrets.DOCKER_USERNAME }}/update_teachers:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/update_teachers:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_TEACHER_MANAGEMENT }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_TEACHER }}
        port: 22
        script: |
          echo "üîÑ Exporting environment variables..."
          echo "export DB_HOST_TEACHER=${{ secrets.DB_HOST_TEACHER }}" >> ~/.bashrc
          echo "export DB_USER_TEACHER=${{ secrets.DB_USER_TEACHER }}" >> ~/.bashrc
          echo "export DB_PASSWORD_TEACHER=${{ secrets.DB_PASSWORD_TEACHER }}" >> ~/.bashrc
          echo "export DB_NAME_TEACHER=${{ secrets.DB_NAME_TEACHER }}" >> ~/.bashrc
          echo "export DB_PORT_TEACHER=${{ secrets.DB_PORT_TEACHER }}" >> ~/.bashrc
          source ~/.bashrc

          echo "üì¶ Moving to the project directory..."
          cd ~/appSchool/BACKEND/teacher_management

          echo "üõ†Ô∏è Checking if Docker is installed..."
          if ! command -v docker &> /dev/null; then
            echo "üîß Installing Docker..."
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu
          fi

          echo "üõë Stopping existing containers..."
          sudo docker compose down

          echo "‚¨áÔ∏è Updating docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'

          services:
            created_teachers:
              image: ${{ secrets.DOCKER_USERNAME }}/created_teachers:latest
              container_name: created_teachers
              restart: always
              ports:
                - "8010:8010"
              environment:
                DB_HOST: $DB_HOST_TEACHER
                DB_PORT: $DB_PORT_TEACHER
                DB_USER: $DB_USER_TEACHER
                DB_PASSWORD: $DB_PASSWORD_TEACHER
                DB_NAME: $DB_NAME_TEACHER

            delete_teachers:
              image: ${{ secrets.DOCKER_USERNAME }}/delete_teachers:latest
              container_name: delete_teachers
              restart: always
              ports:
                - "8013:8013"
              environment:
                DB_HOST: $DB_HOST_TEACHER
                DB_PORT: $DB_PORT_TEACHER
                DB_USER: $DB_USER_TEACHER
                DB_PASSWORD: $DB_PASSWORD_TEACHER
                DB_NAME: $DB_NAME_TEACHER

            read_teachers:
              image: ${{ secrets.DOCKER_USERNAME }}/read_teachers:latest
              container_name: read_teachers
              restart: always
              ports:
                - "8011:8011"
              environment:
                DB_HOST: $DB_HOST_TEACHER
                DB_PORT: $DB_PORT_TEACHER
                DB_USER: $DB_USER_TEACHER
                DB_PASSWORD: $DB_PASSWORD_TEACHER
                DB_NAME: $DB_NAME_TEACHER

            update_teachers:
              image: ${{ secrets.DOCKER_USERNAME }}/update_teachers:latest
              container_name: update_teachers
              restart: always
              ports:
                - "8012:8012"
              environment:
                DB_HOST: $DB_HOST_TEACHER
                DB_PORT: $DB_PORT_TEACHER
                DB_USER: $DB_USER_TEACHER
                DB_PASSWORD: $DB_PASSWORD_TEACHER
                DB_NAME: $DB_NAME_TEACHER
          EOF

          echo "üöÄ Deploying containers with Docker Compose..."
          sudo docker compose up -d

          echo "üîç Verifying running containers..."
          sudo docker ps
