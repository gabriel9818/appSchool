name: Deploy Attendance Microservice to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/attendance/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout del c√≥digo
      uses: actions/checkout@v3

    - name: üîë Acceder a EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_ATTENDANCE }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_ATTENDANCE }}
        port: 22
        script: |
          echo "‚úÖ Conexi√≥n establecida con EC2"

          echo "üõ†Ô∏è Instalando Docker y Docker Compose en Amazon Linux..."
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
            newgrp docker
          fi

          if ! command -v docker-compose &> /dev/null; then
            echo "üîß Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üîë Iniciando sesi√≥n en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "üõë Eliminando contenedores e im√°genes antiguas..."
          sudo docker stop $(sudo docker ps -aq) || true
          sudo docker rm $(sudo docker ps -aq) || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/attendance:latest || true
          sudo docker network prune -f || true
          sudo docker volume prune -f || true

          echo "üì¶ Movi√©ndonos al directorio del proyecto..."
          cd ~/appSchool/BACKEND/attendance || mkdir -p ~/appSchool/BACKEND/attendance && cd ~/appSchool/BACKEND/attendance

          echo "üìÇ Creando archivo .env correctamente..."
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST_ATTENDANCE }}
          DB_PORT=5432
          DB_USER=${{ secrets.DB_USER_ATTENDANCE }}
          DB_PASS=${{ secrets.DB_PASS_ATTENDANCE }}
          DB_NAME=${{ secrets.DB_NAME_ATTENDANCE }}
          EOF

          echo "‚úÖ Archivo .env creado con √©xito:"
          cat ~/appSchool/BACKEND/attendance/.env

          echo "‚¨áÔ∏è Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            attendance:
              image: ${{ secrets.DOCKER_USERNAME }}/attendance:latest
              container_name: attendance_service
              restart: always
              environment:
                - APP_PORT=7000
              ports:
                - "7000:7000"
              env_file:
                - .env
          EOF

          echo "‚úÖ Archivo docker-compose.yml creado con √©xito."
          cat ~/appSchool/BACKEND/attendance/docker-compose.yml

          echo "üì• Descargando im√°genes de Docker..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/attendance:latest

          echo "üöÄ Desplegando servicio con Docker Compose..."
          sudo docker-compose up -d --force-recreate --remove-orphans

          echo "üîç Verificando contenedores en ejecuci√≥n..."
          sudo docker ps
