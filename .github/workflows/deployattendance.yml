name: Deploy Attendance Microservice to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/attendance/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Checkout del código
      uses: actions/checkout@v3

    - name: 🔑 Acceder a EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_ATTENDANCE }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_ATTENDANCE }}
        port: 22
        script: |
          echo "✅ Conexión establecida con EC2"

          echo "🛠️ Eliminando versiones antiguas en conflicto..."
          sudo apt-get remove -y containerd.io containerd docker docker-engine docker.io docker-ce docker-ce-cli || true
          sudo apt-get autoremove -y
          sudo apt-get update -y

          echo "🔧 Instalando dependencias necesarias..."
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg

          echo "📌 Agregando clave GPG de Docker..."
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo "📦 Agregando repositorio oficial de Docker..."
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y

          echo "🚀 Instalando Docker sin conflictos..."
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

          echo "🔄 Habilitando y verificando Docker..."
          sudo systemctl enable docker
          sudo systemctl start docker
          sudo systemctl status docker --no-pager

          echo "🔑 Iniciando sesión en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "🛑 Eliminando contenedores antiguos..."
          sudo docker stop attendance_service || true
          sudo docker rm attendance_service || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/attendance:latest || true
          sudo docker network prune -f || true
          sudo docker volume prune -f || true

          echo "📥 Descargando nueva imagen de Docker..."
          sudo docker pull --no-cache ${{ secrets.DOCKER_USERNAME }}/attendance:latest

          echo "⬇️ Creando archivo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            attendance_service:
              image: ${{ secrets.DOCKER_USERNAME }}/attendance:latest
              container_name: attendance_service
              restart: always
              ports:
                - "7000:7000"
              env_file:
                - .env
          EOF

          echo "🚀 Ejecutando servicio con Docker Compose..."
          sudo docker-compose up -d --force-recreate --build

          echo "🔍 Verificando contenedores en ejecución..."
          sudo docker ps
