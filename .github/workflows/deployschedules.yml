name: Deploy Schedules Management to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/schedules_management/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Checkout del código
      uses: actions/checkout@v3

    - name: 🔑 Acceder al servidor EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_SCHEDULES }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
        port: 22
        script: |
          echo "✅ Conexión establecida con EC2"

          echo "🛠️ Instalando Docker y Docker Compose en Amazon Linux..."
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker
          sudo usermod -aG docker ec2-user
          newgrp docker
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

          echo "🔑 Iniciando sesión en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "🛑 Eliminando contenedores en conflicto..."
          docker stop created_schedules delete_schedules read_schedules update_schedules mysql_db || true
          docker rm created_schedules delete_schedules read_schedules update_schedules mysql_db || true
          docker rmi -f gabrielrv/created_schedules:latest || true
          docker rmi -f gabrielrv/delete_schedules:latest || true
          docker rmi -f gabrielrv/read_schedules:latest || true
          docker rmi -f gabrielrv/update_schedules:latest || true
          docker network prune -f || true
          docker volume prune -f || true

          echo "📦 Moviéndonos al directorio del proyecto..."
          cd ~/appSchool/BACKEND/schedules_management || mkdir -p ~/appSchool/BACKEND/schedules_management && cd ~/appSchool/BACKEND/schedules_management

          echo "📂 Creando archivo .env con GitHub Secrets..."
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST_SCHEDULES }}
          DB_PORT=${{ secrets.DB_PORT_SCHEDULES }}
          DB_USER=${{ secrets.DB_USER_SCHEDULES }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_SCHEDULES }}
          DB_NAME=${{ secrets.DB_NAME_SCHEDULES }}
          EOF

          echo "📥 Descargando imágenes de Docker..."
          docker pull gabrielrv/created_schedules:latest
          docker pull gabrielrv/delete_schedules:latest
          docker pull gabrielrv/read_schedules:latest
          docker pull gabrielrv/update_schedules:latest
          docker pull mysql:latest

          echo "🚀 Desplegando servicios con Docker Compose..."
          docker-compose up -d --force-recreate --remove-orphans

          echo "🔍 Verificando contenedores en ejecución..."
          docker ps
