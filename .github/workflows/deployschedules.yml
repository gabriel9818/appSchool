name: Docker Compose CI/CD for Schedules Management

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/schedules_management/**'
  pull_request:
    paths:
      - 'BACKEND/schedules_management/**'
    branches: ["test", "main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 📥 Paso 1: Checkout del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 🛠️ Paso 2: Verificar estructura del repositorio en GitHub Actions
    - name: Debug repository structure
      run: |
        echo "📂 Listando archivos en el workspace..."
        ls -R $GITHUB_WORKSPACE

    # 🔑 Paso 3: Login en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 🐳 Paso 4: Construcción de las imágenes Docker
    - name: Build Docker images
      run: |
        cd $GITHUB_WORKSPACE/BACKEND/schedules_management
        docker-compose build

    # 📤 Paso 5: Subir las imágenes a Docker Hub
    - name: Push Docker images to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # 📡 Paso 1: Conectar al servidor EC2 usando SSH
    - name: Deploy to EC2 (Amazon Linux)
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_SCHEDULES }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
        port: 22
        script: |
          echo "🔄 Exportando variables de entorno..."
          echo "export DB_HOST=${{ secrets.DB_HOST_SCHEDULES }}" >> ~/.bashrc
          echo "export DB_USER=${{ secrets.DB_USER_SCHEDULES }}" >> ~/.bashrc
          echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD_SCHEDULES }}" >> ~/.bashrc
          echo "export DB_NAME=${{ secrets.DB_NAME_SCHEDULES }}" >> ~/.bashrc
          source ~/.bashrc

          echo "📦 Navegando al directorio del proyecto..."
          cd ~/appSchool/BACKEND/schedules_management

          echo "🛠️ Verificando si Docker está instalado..."
          if ! command -v docker &> /dev/null; then
            echo "🔧 Instalando Docker en Amazon Linux..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
          fi

          echo "⬇️ Descargando la última versión de las imágenes..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest
          
          echo "🛑 Deteniendo y eliminando los contenedores previos..."
          sudo docker-compose down

          echo "🚀 Iniciando los servicios con Docker Compose..."
          sudo docker-compose up -d --force-recreate --remove-orphans

          echo "🔍 Verificando contenedores en ejecución..."
          sudo docker ps
