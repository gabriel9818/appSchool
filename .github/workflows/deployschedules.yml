name: Deploy Schedules Management Services to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/schedules_management/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout del c√≥digo
      uses: actions/checkout@v3

    - name: üîë Acceder al servidor EC2 y desplegar en Amazon Linux
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_SCHEDULES }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
        port: 22
        script: |
          echo "‚úÖ Conexi√≥n establecida con EC2"

          echo "üõ†Ô∏è Verificando si Docker y Docker Compose est√°n instalados..."
          if ! command -v docker &> /dev/null; then
            echo "üîß Instalando Docker..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
            newgrp docker || true
          fi

          if ! command -v docker-compose &> /dev/null; then
            echo "üîß Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üîë Iniciando sesi√≥n en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "üõë Eliminando contenedores e im√°genes en conflicto..."
          docker stop $(docker ps -aq) || true
          docker rm $(docker ps -aq) || true
          docker rmi -f gabrielrv/created_schedules:latest || true
          docker rmi -f gabrielrv/delete_schedules:latest || true
          docker rmi -f gabrielrv/read_schedules:latest || true
          docker rmi -f gabrielrv/update_schedules:latest || true
          docker network prune -f || true
          docker volume prune -f || true

          echo "üì¶ Creando directorio del proyecto..."
          mkdir -p /home/ec2-user/appSchool/BACKEND/schedules_management
          cd /home/ec2-user/appSchool/BACKEND/schedules_management

          echo "üìÇ Creando archivo .env..."
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST_SCHEDULES }}
          DB_PORT=${{ secrets.DB_PORT_SCHEDULES }}
          DB_USER=${{ secrets.DB_USER_SCHEDULES }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_SCHEDULES }}
          DB_NAME=${{ secrets.DB_NAME_SCHEDULES }}
          EOF

          echo "‚¨áÔ∏è Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            created_schedules:
              image: gabrielrv/created_schedules:latest
              container_name: created_schedules
              restart: always
              ports:
                - "6000:6000"
              env_file:
                - .env

            delete_schedules:
              image: gabrielrv/delete_schedules:latest
              container_name: delete_schedules
              restart: always
              ports:
                - "6002:6002"
              env_file:
                - .env

            read_schedules:
              image: gabrielrv/read_schedules:latest
              container_name: read_schedules
              restart: always
              ports:
                - "6001:6001"
              env_file:
                - .env

            update_schedules:
              image: gabrielrv/update_schedules:latest
              container_name: update_schedules
              restart: always
              ports:
                - "6003:6003"
              env_file:
                - .env
          EOF

          echo "üì• Descargando im√°genes de Docker..."
          docker pull gabrielrv/created_schedules:latest
          docker pull gabrielrv/delete_schedules:latest
          docker pull gabrielrv/read_schedules:latest
          docker pull gabrielrv/update_schedules:latest

          echo "üöÄ Desplegando servicios con Docker Compose..."
          docker-compose up -d --force-recreate --remove-orphans

          echo "üîç Verificando contenedores en ejecuci√≥n..."
          docker ps
