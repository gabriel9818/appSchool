name: Docker CI/CD for Schedules Management

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/schedules_management/**'
  pull_request:
    paths:
      - 'BACKEND/schedules_management/**'
    branches: ["test", "main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 🛠️ Clonar el repositorio
      uses: actions/checkout@v3

    - name: 🔑 Iniciar sesión en Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 📦 Construir y Subir Imágenes Docker
      run: |
        docker build BACKEND/schedules_management/created_schedules/ -t ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest

        docker build BACKEND/schedules_management/delete_schedules/ -t ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest

        docker build BACKEND/schedules_management/read_schedules/ -t ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest

        docker build BACKEND/schedules_management/update_schedules/ -t ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Subir código a EC2 y desplegar
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST_SCHEDULES }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
        source: "BACKEND/schedules_management"
        target: "~/appSchool/BACKEND"

    - name: 🚀 Ejecutar `docker-compose` en EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_SCHEDULES }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
        script: |
          cd ~/appSchool/BACKEND/schedules_management
          
          echo "🛠️ Instalando Docker si es necesario..."
          if ! command -v docker &> /dev/null; then
            sudo apt update -y
            sudo apt install -y docker.io docker-compose
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu
          fi

          echo "🛑 Deteniendo contenedores existentes..."
          docker-compose down

          echo "🚀 Actualizando servicios con Docker Compose..."
          docker-compose up -d

          echo "🔍 Verificando contenedores corriendo..."
          docker ps
