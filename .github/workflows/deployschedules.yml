name: 🚀 Deploy Schedules Microservices to AWS

on:
  push:
    paths:
      - 'BACKEND/schedules_management/**'
    branches:
      - test

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Build and push Docker images
        run: |
          # Navegar a la carpeta del proyecto
          cd BACKEND/schedules_management
          
          # Construir y subir imágenes de cada microservicio
          docker build -t ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest -f created_schedules/Dockerfile created_schedules
          docker push ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest
          
          docker build -t ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest -f delete_schedules/Dockerfile delete_schedules
          docker push ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest
          
          docker build -t ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest -f read_schedules/Dockerfile read_schedules
          docker push ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest
          
          docker build -t ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest -f update_schedules/Dockerfile update_schedules
          docker push ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest

  deploy:
    name: 🚀 Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 🔑 SSH into EC2 and Deploy Microservices
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_SCHEDULES }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY_SCHEDULES }}
          port: 22
          script: |
            echo "🔍 Checking if Docker & Docker Compose are installed..."
            if ! command -v docker &> /dev/null; then
              echo "📦 Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker $USER
            fi
            if ! command -v docker-compose &> /dev/null; then
              echo "📦 Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "📦 Navigating to deployment directory..."
            cd ~/appSchool/BACKEND/schedules_management

            echo "🛑 Stopping and removing previous containers..."
            sudo docker-compose down || true

            echo "📥 Pulling latest images..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/created_schedules:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete_schedules:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/read_schedules:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/update_schedules:latest

            echo "🚀 Starting new deployment..."
            sudo docker-compose up -d --force-recreate --remove-orphans

            echo "🔍 Verifying deployment..."
            sudo docker ps
