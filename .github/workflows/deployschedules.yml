name: CI/CD for Schedules Management

on:
  push:
    branches:
      - test
      - main
    paths:
      - 'BACKEND/schedules_management/**'
  pull_request:
    branches:
      - test
      - main
    paths:
      - 'BACKEND/schedules_management/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 📥 Paso 1: Checkout del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # 🛠️ Paso 2: Instalar Docker y Docker Compose
    - name: Install Docker & Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    # 🔑 Paso 3: Login en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 🐳 Paso 4: Construcción de las imágenes Docker
    - name: Build Docker images
      run: |
        cd $GITHUB_WORKSPACE/BACKEND/schedules_management
        docker-compose build

    # 📤 Paso 5: Subir las imágenes a Docker Hub
    - name: Push Docker images to Docker Hub
      run: |
        cd $GITHUB_WORKSPACE/BACKEND/schedules_management
        docker-compose push

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # 📡 Paso 1: Conectar a EC2 (Amazon Linux) y desplegar servicios
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "🔄 Configurando el entorno en EC2..."
          echo "export DB_HOST=${{ secrets.DB_HOST }}" >> ~/.bashrc
          echo "export DB_USER=${{ secrets.DB_USER }}" >> ~/.bashrc
          echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/.bashrc
          echo "export DB_NAME=${{ secrets.DB_NAME }}" >> ~/.bashrc
          source ~/.bashrc

          echo "📦 Navegando al directorio del proyecto..."
          cd ~/appSchool/BACKEND/schedules_management

          echo "🛠️ Verificando si Docker está instalado en EC2..."
          if ! command -v docker &> /dev/null; then
            echo "🔧 Instalando Docker en Amazon Linux..."
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
          fi

          echo "🛠️ Verificando si Docker Compose está instalado..."
          if ! command -v docker-compose &> /dev/null; then
            echo "🔧 Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "🛑 Deteniendo y eliminando contenedores previos..."
          sudo docker-compose down || true

          echo "⬇️ Descargando las últimas imágenes desde Docker Hub..."
          sudo docker-compose pull

          echo "🚀 Levantando los nuevos contenedores..."
          sudo docker-compose up -d --force-recreate --remove-orphans

          echo "🔍 Verificando contenedores en ejecución..."
          sudo docker ps

          echo "✅ Despliegue completado en EC2"
