name: Deploy Student Registration to EC2

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/student_registration/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🚀 Checkout código
      uses: actions/checkout@v3

    - name: 🔑 Conectar a EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_STUDENT }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY_STUDENT }}
        port: 22
        script: |
          echo "📦 Instalando dependencias en la instancia EC2..."
          sudo apt update -y
          sudo apt install -y nginx php8.3-fpm php8.3-mysql unzip git curl

          echo "🐳 Verificando Docker..."
          if ! command -v docker &> /dev/null; then
            echo "🛠 Instalando Docker..."
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo usermod -aG docker ubuntu
          fi

          echo "📂 Navegando al directorio del proyecto..."
          cd ~/appSchool/BACKEND/student_registration

          echo "🛠 Configurando Nginx y PHP-FPM..."
          sudo cp nginx.conf /etc/nginx/sites-available/default
          sudo systemctl restart nginx php8.3-fpm

          echo "🛠 Configurando permisos de archivos..."
          sudo chown -R www-data:www-data /var/www/html
          sudo chmod -R 775 /var/www/html

          echo "🔄 Deteniendo contenedor previo..."
          sudo docker stop student_registration_php || true
          sudo docker rm student_registration_php || true

          echo "📦 Descargando la última imagen desde Docker Hub..."
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/student_registration_php:latest

          echo "🚀 Iniciando el nuevo contenedor..."
          sudo docker run -d \
            --name student_registration_php \
            -p 9000:9000 \
            -e DB_HOST=${{ secrets.DB_HOST_STUDENT }} \
            -e DB_USER=${{ secrets.DB_USER_STUDENT }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD_STUDENT }} \
            -e DB_NAME=${{ secrets.DB_NAME_STUDENT }} \
            ${{ secrets.DOCKER_USERNAME }}/student_registration_php:latest

          echo "✅ Verificando si el contenedor está corriendo..."
          if sudo docker ps -f name=student_registration_php | grep student_registration_php; then
            echo "✅ Contenedor corriendo correctamente en puerto 9000."
          else
            echo "❌ Error al iniciar el contenedor. Revisa los logs."
            exit 1
          fi
