name: Deploy Grade Management Microservices

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/grade_management/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Debug repository structure
      run: ls -R $GITHUB_WORKSPACE

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker images
      run: |
        for service in created_grades read_grades update_grades delete_grades; do
          echo "üöÄ Construyendo imagen para $service..."
          docker build $GITHUB_WORKSPACE/BACKEND/grade_management/$service/. \
            --file $GITHUB_WORKSPACE/BACKEND/grade_management/$service/Dockerfile \
            --build-arg DB_HOST=${{ secrets.DB_HOST_GRADES }} \
            --build-arg DB_USER=${{ secrets.DB_USER_GRADES }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD_GRADES }} \
            --build-arg DB_NAME=${{ secrets.DB_NAME_GRADES }} \
            --build-arg SERVER_PORT=5432 \
            -t ${{ secrets.DOCKER_USERNAME }}/$service:latest
        done

    - name: Push Docker images to Docker Hub
      run: |
        for service in created_grades read_grades update_grades delete_grades; do
          echo "üì§ Subiendo imagen para $service..."
          docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
        done

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_GRADES }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_GRADES }}
        port: 22
        script: |
          echo "üîÑ Creando directorio en EC2..."
          mkdir -p ~/appGrades/BACKEND/grade_management

          echo "üìù Creando archivo .env global..."
          cat <<EOF > ~/appGrades/BACKEND/grade_management/.env
          DB_USER=${{ secrets.DB_USER_GRADES }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_GRADES }}
          DB_HOST=${{ secrets.DB_HOST_GRADES }}
          DB_PORT=5432
          DB_NAME=${{ secrets.DB_NAME_GRADES }}
          EOF

          echo "üì¶ Verificando contenido del .env..."
          cat ~/appGrades/BACKEND/grade_management/.env

          echo "üõ†Ô∏è Instalando Docker en Amazon Linux 2023..."
          if ! command -v docker &> /dev/null; then
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
          fi

          echo "üõ†Ô∏è Instalando Docker Compose..."
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üõë Deteniendo contenedores antiguos..."
          sudo docker-compose -f ~/appGrades/BACKEND/grade_management/docker-compose.yml down

          echo "‚¨áÔ∏è Descargando √∫ltimas im√°genes..."
          for service in created_grades read_grades update_grades delete_grades; do
            echo "üì• Descargando imagen para $service..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/$service:latest
          done

          echo "üöÄ Levantando los contenedores con Docker Compose..."
          sudo docker-compose -f ~/appGrades/BACKEND/grade_management/docker-compose.yml up -d

          echo "üîç Verificando contenedores..."
          sudo docker ps
