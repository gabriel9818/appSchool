name: Deploy Grade Management Services to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/grade_management/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout del c√≥digo
      uses: actions/checkout@v3

    - name: üîß Construcci√≥n y subida de im√°genes a Docker Hub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/created_grades:latest BACKEND/grade_management/created_grades
        docker build -t ${{ secrets.DOCKER_USERNAME }}/delete_grades:latest BACKEND/grade_management/delete_grades
        docker build -t ${{ secrets.DOCKER_USERNAME }}/read_grades:latest BACKEND/grade_management/read_grades
        docker build -t ${{ secrets.DOCKER_USERNAME }}/update_grades:latest BACKEND/grade_management/update_grades

        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

        docker push ${{ secrets.DOCKER_USERNAME }}/created_grades:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/delete_grades:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/read_grades:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/update_grades:latest

    - name: üîë Acceder al servidor EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_GRADES }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_GRADES }}
        port: 22
        script: |
          echo "‚úÖ Conexi√≥n establecida con EC2"

          echo "üõ†Ô∏è Verificando si Docker y Docker Compose est√°n instalados..."
          if ! command -v docker &> /dev/null; then
            echo "üîß Instalando Docker..."
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
          fi

          if ! command -v docker-compose &> /dev/null; then
            echo "üîß Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üì¶ Movi√©ndonos al directorio del proyecto..."
          cd ~/appGrades/BACKEND/grade_management || mkdir -p ~/appGrades/BACKEND/grade_management && cd ~/appGrades/BACKEND/grade_management

          echo "‚¨áÔ∏è Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            created_grades:
              image: ${{ secrets.DOCKER_USERNAME }}/created_grades:latest
              container_name: created_grades
              restart: always
              ports:
                - "2000:2000"
              environment:
                - APP_PORT=2000

            delete_grades:
              image: ${{ secrets.DOCKER_USERNAME }}/delete_grades:latest
              container_name: delete_grades
              restart: always
              ports:
                - "2003:2003"
              environment:
                - APP_PORT=2003

            read_grades:
              image: ${{ secrets.DOCKER_USERNAME }}/read_grades:latest
              container_name: read_grades
              restart: always
              ports:
                - "2001:2001"
              environment:
                - APP_PORT=2001

            update_grades:
              image: ${{ secrets.DOCKER_USERNAME }}/update_grades:latest
              container_name: update_grades
              restart: always
              ports:
                - "2002:2002"
              environment:
                - APP_PORT=2002
          EOF

          echo "üì• Descargando im√°genes de Docker..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/created_grades:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/delete_grades:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/read_grades:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/update_grades:latest

          echo "üöÄ Desplegando servicios con Docker Compose..."
          docker-compose up -d --force-recreate --remove-orphans

          echo "üîç Verificando contenedores en ejecuci√≥n..."
          docker ps
