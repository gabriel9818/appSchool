name: Deploy Student Registration Services to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/student_registration/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout del c√≥digo
      uses: actions/checkout@v3

    - name: üõ†Ô∏è Instalar Docker CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: üîÑ Construir im√°genes de Docker
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest BACKEND/student_registration/created/
        docker build -t ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest BACKEND/student_registration/delete/
        docker build -t ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest BACKEND/student_registration/read/
        docker build -t ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest BACKEND/student_registration/update/

    - name: üîë Iniciar sesi√≥n en Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: üöÄ Subir im√°genes a Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest

    - name: üîë Acceder al servidor EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_STUDENT_REGISTRATION }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_STUDENT_REGISTRATION }}
        port: 22
        script: |
          echo "‚úÖ Conexi√≥n establecida con EC2"

          echo "üõ†Ô∏è Instalando Docker y Docker Compose..."
          if ! command -v docker &> /dev/null; then
            sudo dnf update -y
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
            sudo systemctl restart docker
          fi

          if ! command -v docker-compose &> /dev/null; then
            echo "üîß Instalando Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "üîë Iniciando sesi√≥n en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "üõë Eliminando contenedores e im√°genes antiguas..."
          sudo docker stop $(sudo docker ps -aq) || true
          sudo docker rm $(sudo docker ps -aq) || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest || true
          sudo docker network prune -f || true
          sudo docker volume prune -f || true

          echo "üì¶ Movi√©ndonos al directorio del proyecto..."
          cd ~/appStudent/BACKEND/student_registration || mkdir -p ~/appStudent/BACKEND/student_registration && cd ~/appStudent/BACKEND/student_registration

          echo "üìÇ Creando archivo .env correctamente..."
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST_STUDENT_REGISTRATION }}
          DB_PORT=5432
          DB_USER=${{ secrets.DB_USER_STUDENT_REGISTRATION }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_STUDENT_REGISTRATION }}
          DB_NAME=${{ secrets.DB_NAME_STUDENT_REGISTRATION }}
          DB_SSL=true
          EOF

          echo "‚úÖ Archivo .env creado con √©xito:"
          cat ~/appStudent/BACKEND/student_registration/.env

          echo "‚¨áÔ∏è Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            created_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest
              container_name: created_student_registration
              restart: always
              environment:
                - APP_PORT=8085
              ports:
                - "8085:8085"
              env_file:
                - .env

            delete_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest
              container_name: delete_student_registration
              restart: always
              environment:
                - APP_PORT=8086
              ports:
                - "8086:8086"
              env_file:
                - .env

            read_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest
              container_name: read_student_registration
              restart: always
              environment:
            
