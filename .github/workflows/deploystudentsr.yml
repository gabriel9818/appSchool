name: Deploy Student Registration Services to AWS

on:
  push:
    branches:
      - test
    paths:
      - 'BACKEND/student_registration/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üöÄ Checkout del c√≥digo
      uses: actions/checkout@v3

    - name: üîë Acceder al servidor EC2 y desplegar
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST_STUDENT_REGISTRATION }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY_STUDENT_REGISTRATION }}
        port: 22
        script: |
          echo "‚úÖ Conexi√≥n establecida con EC2"

          echo "üõ†Ô∏è Eliminando versiones antiguas en conflicto..."
          sudo apt-get remove -y containerd.io containerd docker docker-engine docker.io docker-ce docker-ce-cli || true
          sudo apt-get autoremove -y
          sudo apt-get update -y

          echo "üîß Instalando dependencias necesarias..."
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg

          echo "üìå Agregando clave GPG de Docker..."
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo "üì¶ Agregando repositorio oficial de Docker..."
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y

          echo "üöÄ Instalando Docker sin conflictos..."
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

          echo "üîÑ Habilitando y verificando Docker..."
          sudo systemctl enable docker
          sudo systemctl start docker
          sudo systemctl status docker --no-pager

          echo "üîë Iniciando sesi√≥n en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "üõë Eliminando contenedores e im√°genes antiguas..."
          sudo docker stop $(sudo docker ps -aq) || true
          sudo docker rm $(sudo docker ps -aq) || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest || true
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest || true
          sudo docker network prune -f || true
          sudo docker volume prune -f || true

          echo "üì¶ Movi√©ndonos al directorio del proyecto..."
          mkdir -p ~/appStudent/BACKEND/student_registration
          cd ~/appStudent/BACKEND/student_registration

          echo "üìÇ Creando archivo .env correctamente..."
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST_STUDENT_REGISTRATION }}
          DB_PORT=5432
          DB_USER=${{ secrets.DB_USER_STUDENT_REGISTRATION }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD_STUDENT_REGISTRATION }}
          DB_NAME=${{ secrets.DB_NAME_STUDENT_REGISTRATION }}
          DB_SSL=true
          EOF

          echo "‚úÖ Archivo .env creado con √©xito."
          cat ~/appStudent/BACKEND/student_registration/.env

          echo "‚¨áÔ∏è Creando nuevo docker-compose.yml..."
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            created_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest
              container_name: created_student_registration
              restart: always
              ports:
                - "8085:8085"
              env_file:
                - .env

            delete_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest
              container_name: delete_student_registration
              restart: always
              ports:
                - "8086:8086"
              env_file:
                - .env

            read_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest
              container_name: read_student_registration
              restart: always
              ports:
                - "8087:8087"
              env_file:
                - .env

            update_student_registration:
              image: ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest
              container_name: update_student_registration
              restart: always
              ports:
                - "8088:8088"
              env_file:
                - .env
          EOF

          echo "‚úÖ Archivo docker-compose.yml creado con √©xito."
          cat ~/appStudent/BACKEND/student_registration/docker-compose.yml

          echo "üì• Descargando nuevas im√°genes de Docker..."
          sudo docker pull --no-cache ${{ secrets.DOCKER_USERNAME }}/created_student_registration:latest
          sudo docker pull --no-cache ${{ secrets.DOCKER_USERNAME }}/delete_student_registration:latest
          sudo docker pull --no-cache ${{ secrets.DOCKER_USERNAME }}/read_student_registration:latest
          sudo docker pull --no-cache ${{ secrets.DOCKER_USERNAME }}/update_student_registration:latest

          echo "üöÄ Desplegando servicios con Docker Compose..."
          sudo docker-compose up -d --force-recreate --build

          echo "üîç Verificando contenedores en ejecuci√≥n..."
          sudo docker ps
